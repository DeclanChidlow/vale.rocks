{
	assets
	.well-known
	opensearch.xml
	robots.txt
	app.webmanifest

	...Tree.mapExtension(pages, ".md→.html", {
		value: (path) => main_template.ori(functions/parse-markdown.js(path))
	})

	posts.html = pages/posts.ori(post_data.ori)
	posts/ = {
		...Tree.map(post_data.ori, post_template.ori)
		feed.json = Origami.json(post_syndication.ori(post_data.ori))
		feed.xml = Origami.rss(post_syndication.ori(post_data.ori))
	}

	portfolio.html = pages/portfolio.ori(portfolio_data.ori)
	portfolio/ = Tree.map(portfolio_data.ori, portfolio_template.ori)

	(paginated_micros) = Tree.paginate(micro_data.ori, 30)
	micros.html = pages/micros.ori(Tree.first(paginated_micros))
	micros/ = {
		...Tree.mapExtension(paginated_micros, "→.html", { 
			value: pages/micros.ori
		})
		...Tree.map(micro_data.ori, micro_template.ori)
		feed.json = Origami.json(micro_syndication.ori(micro_data.ori))
		feed.xml = Origami.rss(micro_syndication.ori(micro_data.ori))
	}

	(paginated_photography) = Tree.paginate(photography_data.ori, 50)
	photography.html = pages/photography.ori(Tree.first(paginated_photography))
	photography/ = {
		...Tree.mapExtension(paginated_photography, "→.html", {
			value: pages/photography.ori
		})
		...Tree.map(photography_data.ori, photography_template.ori)
		feed.json = Origami.json(photography_syndication.ori(photography_data.ori))
		feed.xml = Origami.rss(photography_syndication.ori(photography_data.ori))
	}

	(paginated_videos) = Tree.paginate(video_data.ori, 30)
	videos.html = pages/videos.ori(Tree.first(paginated_videos))
	videos/ = {
		...Tree.mapExtension(paginated_videos, "→.html", {
			value: pages/videos.ori
		})
		...Tree.map(video_data.ori, video_template.ori)
		feed.json = Origami.json(video_syndication.ori(video_data.ori))
		feed.xml = Origami.rss(video_syndication.ori(video_data.ori))
	}

	(paginated_elsewhere) = Tree.paginate(elsewhere_data.yaml , 100)
	elsewhere.html = pages/elsewhere.ori(Tree.first(paginated_elsewhere))
	elsewhere/ = {
		...Tree.mapExtension(paginated_elsewhere, "→.html", {
			value: pages/elsewhere.ori
		})
		feed.json = Origami.json(elsewhere_syndication.ori(elsewhere_data.yaml))
		feed.xml = Origami.rss(elsewhere_syndication.ori(elsewhere_data.yaml))
	}

	links.html = pages/links.ori(./links/blogs.yaml, ./links/tools-and-resources.yaml, ./links/podcasts.yaml, ./links/video-channels.yaml, ./links/miscellaneous.yaml)
	links/ = Tree.from({
		blogs.html: links/blogs.ori(links/blogs.yaml)
		blogs.opml: links/opml.ori(links/blogs.yaml)
		tools-and-resources.html: links/tools-and-resources.ori(links/tools-and-resources.yaml)
		podcasts.html: links/podcasts.ori(links/podcasts.yaml)
		podcasts.opml: links/opml.ori(links/podcasts.yaml)
		video-channels.html: links/video-channels.ori(links/video-channels.yaml)
		video-channels.opml: links/opml.ori(links/video-channels.yaml)
		miscellaneous.html: links/miscellaneous.ori(links/miscellaneous.yaml)
	})

	library.html = pages/library.ori(./library/books.yaml, ./library/films.yaml, ./library/series.yaml, ./library/games.yaml)
	library/ = Tree.from({
		books.html: library/books.ori(library/books.yaml)
		films.html: library/films.ori(library/films.yaml)
		series.html: library/series.ori(library/series.yaml)
		games.html: library/games.ori(library/games.yaml)
	})

	(paginated_firehose) = Tree.paginate(firehose_data.ori, 30)
	firehose.html = pages/firehose.ori(Tree.first(paginated_firehose))
	firehose/ = Tree.mapExtension(paginated_firehose, "→.html", {
		value: pages/firehose.ori
	})
}

→ (site) => {
    ...site
    pagefind = Origami.once(() => package:@weborigami/pagefind(site))
    sitemap.xml = sitemap-improver.js(Origami.sitemap(site, {
    	base: "https://vale.rocks", assumeSlashes: true
    }))
}
